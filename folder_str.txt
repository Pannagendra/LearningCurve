Design and deploy an ML pipeline that:

Trains a model on Titanic dataset

Logs experiments using MLflow

Deploys model using FastAPI

Schedules daily retraining using Airflow

Logs predictions and exposes Grafana dashboard

âœ… Goal: Build an end-to-end MLOps pipeline using open-source tools
ðŸ“˜ Use Case: Titanic dataset â€“ train, track, deploy, and monitor a model
ðŸŽ¯ Tools: MLflow, FastAPI, Airflow, Docker, GitHub Actions (optional), Grafana + Prometheus

titanic-mlops/
â”œâ”€â”€ data/
â”‚   â””â”€â”€ titanic.csv
â”œâ”€â”€ notebooks/
â”‚   â””â”€â”€ eda.ipynb
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ train.py
â”‚   â”œâ”€â”€ predict.py
â”‚   â””â”€â”€ preprocess.py
â”œâ”€â”€ app/
â”‚   â””â”€â”€ main.py
â”œâ”€â”€ airflow/
â”‚   â””â”€â”€ dags/
â”‚       â””â”€â”€ retrain_pipeline.py
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ mlruns/  # MLflow artifacts
â”œâ”€â”€ README.md
â””â”€â”€ .env
